- name: make its permissions right
  file:
    path: /home/ubuntu/.ssh/mykey
    mode: '0400'

- name: create key pair using key_material obtained using 'file' lookup plugin
  amazon.aws.ec2_key:
    name: '{{ key_name }}'
    key_material: "{{ lookup('file', '/home/ubuntu/.ssh/mykey.pub') }}"
    state: present
    region: '{{ aws_region }}'
  register: ec2_key_pair

- name: create ssh security
  amazon.aws.ec2_security_group:
    name: '{{ template_sg }}'
    description: template ssh sg
    vpc_id: '{{ vpc_id }}'
    region: '{{ aws_region }}'
    rules:
      - proto: tcp
        ports:
        - 22
        - 80
        - 443
        cidr_ip: '0.0.0.0/0'
  register: inst_sg

- name: set security group var
  set_fact: 
    instance_sg_id: '{{ inst_sg.group_id }}'

- name: start template instance
  amazon.aws.ec2_instance:
    instance_type: '{{ instance_type }}'
    key_name: '{{ key_name }}'
    image_id: '{{ ami }}'
    exact_count: 1
    region: '{{ aws_region }}'
    security_group: '{{ instance_sg_id }}'
    vpc_subnet_id: '{{ pub_01_subnet_id }}'
    network:
      assign_public_ip: true
    state: running
    wait: true
    tags:
      Name: '{{ ec2_temp }}'
  register: ec2

- name: debug
  debug:
    var: ec2

- name: set ec2 fact
  shell: "echo 'inst_id: {{ item.instance_id }}' >> /home/ubuntu/host_vars/localhost/vars.yml"
  with_items: '{{ ec2.instances }}'
      
- name: Add the new instance to the host group
  add_host:
    hostname: '{{ item.public_ip_address }}'
    groups: remote
  with_items:
    - '{{ ec2.instances }}'


- name: Store the IP address as a host variable for future tasks
  shell: "echo 'ansible_ssh_private_key_file: ~/.ssh/mykey \nansible_host: {{ item.public_ip_address }}' >> /home/ubuntu/host_vars/remote-host/vars.yml"
  with_items:
    - '{{ ec2.instances }}'

- name: pause
  pause:
    seconds: 120
